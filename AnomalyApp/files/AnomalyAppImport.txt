[{"id":"9dbb118d.6244f","type":"debug","name":"Output","active":true,"console":"true","complete":"true","x":590,"y":403,"z":"eef0b6a7.110f48","wires":[]},{"id":"fab5ca87.054a38","type":"inject","name":"","topic":"","payload":"","payloadType":"none","repeat":"","crontab":"","once":true,"x":113,"y":294,"z":"eef0b6a7.110f48","wires":[["5d05e18c.a2fa2"]]},{"id":"632a0b45.9cd5f4","type":"http request","name":"Login","method":"POST","ret":"txt","url":"https://<hostname>:8443/console/blushiftservices/BluShiftHttp.do","x":499,"y":224,"z":"eef0b6a7.110f48","wires":[["716e48c7.8e91b8"]]},{"id":"5d05e18c.a2fa2","type":"function","name":"R Script Payload","func":"schema = \"YOUR DASHDB USERNAME\"\ntable = \"IDUGIOTDEMO\"\nmsg.payload = \"cmd=RScriptRunScript&command=library\\(ibmdbR\\)\\nlibrary\\(AnomalyDetection\\)\\ncon <- idaConnect(\\\"BLUDB\\\",\\\"\\\",\\\"\\\")\\nidaInit(con)\\ndf <- idaQuery(\\\"SELECT * FROM \"+schema+\".\"+table+\"\\\",as.is=F)\\nres = AnomalyDetectionVec(df[,2], max_anoms=0.02, period=3, direction='both', plot=TRUE, xlabel = \\\"Time\\\", ylabel=\\\"Temp\\\")\\nlength\\(res$anoms[[1]]\\)\\nprint\\(res$anoms, row.names=FALSE\\)&fileName=&profileName=BLUDB&userid=\"+schema;\nmsg.headers = {\"content-type\": \"application/x-www-form-urlencoded\"};              \nreturn msg;","outputs":1,"valid":true,"x":311,"y":225,"z":"eef0b6a7.110f48","wires":[["632a0b45.9cd5f4"]]},{"id":"716e48c7.8e91b8","type":"function","name":"Extract the R output","func":"var rOutput = msg.payload.toString().split(',')[3].split(':')[2];\nrOutput = rOutput.replace(/\\[\\d+\\]/g, '');\nrOutput = rOutput.replace(/\\\\\"/g, '');\nrOutput = rOutput.replace(/\\\\\"/g, '');\nrOutput = rOutput.replace(/\\\\\\\\n/g, '');\nrOutput = rOutput.replace(/index anoms /g, '');\nrOutput = rOutput.replace(/\\s{2,}/g, ' ');\nvar rOutArr = rOutput.split(\" \");\nrOutArr.shift(); // Removing the first trash element\nvar noOfAnomalies = rOutArr.shift(); // now the first element contains the number of anomalies\nif (Number(noOfAnomalies) > 0) {\nvar twilioData = {};\ntwilioData.payload = (\"The anomalies in your data [Index, Anoms] : \").concat(rOutArr.toString());\nreturn twilioData;\n}\nreturn \"There are no anomalies in your data!\";\n","outputs":"1","valid":true,"x":349,"y":371,"z":"eef0b6a7.110f48","wires":[["9dbb118d.6244f","8a24cf9e.75db3"]]},{"id":"eadb48da.1524b8","type":"ibmiot in","authentication":"quickstart","apiKey":"","inputType":"evt","deviceId":"a34d5a2a3535","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"Smart Transformer","service":"quickstart","allDevices":"","allApplications":"","allDeviceTypes":true,"allEvents":true,"allCommands":"","allFormats":"","x":90,"y":89,"z":"eef0b6a7.110f48","wires":[["b0209450.4fdf68"]]},{"id":"eb4eaa78.14b158","type":"debug","name":"Formatted output","active":false,"console":"false","complete":"payload","x":735,"y":36,"z":"eef0b6a7.110f48","wires":[]},{"id":"b0209450.4fdf68","type":"function","name":"format data","func":"msg.payload =\n{\nTS : 'TIMESTAMP',\nTEMP : msg.payload.d.temp,\nHUMIDITY : msg.payload.d.humidity\n}\nreturn msg;  ","outputs":1,"valid":true,"x":300,"y":89,"z":"eef0b6a7.110f48","wires":[["11bc1dcb.ee43e2"]]},{"id":"ae7c34f9.5183c8","type":"dashDB out","service":"","table":"IDUGIOTDEMO","name":"","x":740,"y":167,"z":"eef0b6a7.110f48","wires":[]},{"id":"11bc1dcb.ee43e2","type":"trigger","op1":"1","op2":"0","op1type":"pay","op2type":"pay","duration":"10","extend":"false","units":"s","name":"","x":486,"y":98,"z":"eef0b6a7.110f48","wires":[["eb4eaa78.14b158","ae7c34f9.5183c8"]]},{"id":"8a24cf9e.75db3","type":"twilio out","service":"_ext_","from":"","number":"","name":"","x":587,"y":504,"z":"eef0b6a7.110f48","wires":[]}]